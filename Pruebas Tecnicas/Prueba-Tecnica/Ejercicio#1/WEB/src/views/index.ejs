<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/style.css">
  <title>Top Repos de GitHub</title>
</head>
<body>
  <h1>Obtener los 10 repositorios más estrellados de GitHub</h1>
  
  <form id="githubForm">
    <label for="githubUsername">Ingrese el nombre de usuario de GitHub:</label>
    <input type="text" id="githubUsername" required>
    <button type="button" onclick="getTopStarredRepos()">Obtener Repositorios</button>
  </form>

  <h2>Resultados:</h2>
  <ul id="repoList"></ul>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.0/axios.min.js" integrity="sha512-DZqqY3PiOvTP9HkjIWgjO6ouCbq+dxqWoJZ/Q+zPYNHmlnI2dQnbJ5bxAHpAMw+LXRm4D72EIRXzvcHQtE8/VQ==" crossorigin="anonymous"></script>
  <script>

    
async function getTopStarredRepos() {
    const username = document.getElementById('githubUsername').value;
    const repoList = document.getElementById('repoList');

    try {
      // Limpia la lista anterior
      repoList.innerHTML = "";

      // Buscar repositorios públicos del usuario en GitHub ordenados por estrellas
      const searchResponse = await axios.get(`https://api.github.com/search/repositories?q=user:${username}&sort=stars&order=desc`);

      // Obtener los primeros 10 resultados
      const topRepos = searchResponse.data.items.slice(0, 10);

      // Mostrar los nombres y estrellas de los repositorios en la lista
      topRepos.forEach(repo => {
        const listItem = document.createElement('li');
        listItem.textContent = `${repo.name}: ${repo.stargazers_count} estrellas`;
        repoList.appendChild(listItem);
      });

    } catch (error) {
      // Si hay un error, imprimirlo
      console.error(`Error al obtener repositorios: ${error.message}`);
    }
  }

  </script>

</body>
</html>
