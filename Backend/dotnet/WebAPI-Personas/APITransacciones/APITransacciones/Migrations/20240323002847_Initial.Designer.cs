// <auto-generated />
using System;
using APITransacciones.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APITransacciones.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240323002847_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APITransacciones.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("APITransacciones.Models.Concesionario", b =>
                {
                    b.Property<int>("ConcecionarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConcecionarioID"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConcecionarioID");

                    b.ToTable("Concesionarios");
                });

            modelBuilder.Entity("APITransacciones.Models.Transaccion", b =>
                {
                    b.Property<int>("TransaccionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransaccionID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("ConcesionarioID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrecioVenta")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoID")
                        .HasColumnType("int");

                    b.HasKey("TransaccionID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("ConcesionarioID");

                    b.HasIndex("VehiculoID");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("APITransacciones.Models.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiculoID"));

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("VehiculoID");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("APITransacciones.Models.Transaccion", b =>
                {
                    b.HasOne("APITransacciones.Models.Cliente", null)
                        .WithMany("Transacciones")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APITransacciones.Models.Concesionario", null)
                        .WithMany("Transacciones")
                        .HasForeignKey("ConcesionarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APITransacciones.Models.Vehiculo", null)
                        .WithMany("Transacciones")
                        .HasForeignKey("VehiculoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APITransacciones.Models.Cliente", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("APITransacciones.Models.Concesionario", b =>
                {
                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("APITransacciones.Models.Vehiculo", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
